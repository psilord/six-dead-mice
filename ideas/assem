;; maybe...
(defstruct instdef
  opcode-prefix
  kind
  mode
  syntax-analyzer
  encodings)

;; When I see "add" as an opcode-prefix, then run each syntax-analyzer
;; for all add grouped functions. Some will match and some won't.
;; for the ones that do, inspect <q> and see if I'm in thumb mode and
;; forced to perform a particular action, if <q> is unset,
;; then I decide based upon preferences. <q> in ARM mode means .n is an error
;; and .w has no effect.

;; NOTE: This is A32/T32 code, but no A64 code yet.
(add
 (prefix "add")
 (kind (immediate)
       (machine-encodings
        (((ARMv4* ARMv5T* ARMv6* ARMv7) (arm)) a1
         (lambda (ann s <c> <Rd> <Rn> <const>)
           (destructuring-bits
               ((((12 <imm12>)) <const))
             (gcm32 ann
                    (31 28 <c>)
                    (27 26 #b00)
                    (25 25 #b0)
                    (24 21 #b0100)
                    (20 20 s)
                    (19 16 <Rn>)
                    (15 12 <Rd>)
                    (11 0 <imm12))))))

       (((ARMv8*) (a32)) a1
        (lambda (ann s <c> <Rd> <Rn> <const>)
          (destructuring-bits
              ((((12 <imm12>)) <const))
            (gcm32 ann
                   (31 28 <c>)
                   (27 24 #b0010)
                   (23 21 #b100)
                   (20 20 s)
                   (19 16 <Rn>)
                   (15 12 <Rd>)
                   (11 0 <imm12)))))

       (((ARMv4T ARMv5T* ARMv6* ARMv7) (thumb)) t1
        (lambda (ann <Rn> <Rd> <const>)
          (destructuring-bits
              ((((3 <imm8>)) <const>))
            (gmc16-1 ann
                     (15 13 #b000)
                     (12 11 #b11)
                     (10 10 #b1)
                     (9 9 #b0)
                     (8 6 <imm3>)
                     (5 3 <Rn>)
                     (2 0 <Rd>)))))

       (((ARMv8*) (t32)) t1
        (lambda (ann <Rn> <Rd> <const>)
          (destructuring-bits
              ((((3 <imm3>)) <const>))
            (gmc16-1 ann
                     (15 10 #b000111)
                     (9 9 #b0)
                     (8 6 <imm3>)
                     (5 3 <Rn>)
                     (2 0 <Rd>)))))

       (((ARMv4T ARMv5T* ARMv6* ARMv7 ARMv8) (thumb t32)) t2
        (lambda (ann <c> <Rdn> <imm8>)
          (destructuring-bits
              ((((8 <imm8>)) <const>))
            (gcm16-1 ann
                     (15 13 #b001)
                     (12 11 #b10)
                     (10 8 <Rdn>)

                     (7 0 <imm8>)))))

       (((ARMv6T2 ARMv7 ARMv8) (thumb t32)) t3
        (lambda (ann s <c> <Rd> <Rn> <const>)
          (destructuring-bits
              ((((1 i) (3 <imm3>) (8 <imm8>)) <const>))
            (gcm16-2 ann
                     ((15 11 #b11110)
                      (10 10 i)
                      (9 9 #b0)
                      (8 5 #b1000)
                      (4 4 s)
                      (3 0 <Rn>))

                     ((15 15 #b0)
                      (14 12 <imm3>)
                      (11 8 <Rd>)
                      (7 0 <imm8>))))))

       ;; do t4
